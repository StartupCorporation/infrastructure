## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER COMPOSE EXPOSE PORT
export DOCKER_DB_EXPOSE_PORT=6543
export DOCKER_RABBITMQ_EXPOSE_PORT_AMQP=5672
export DOCKER_RABBITMQ_EXPOSE_PORT_UI=15672

## ==== RABBITMQ
export INFRA_RABBITMQ_USERNAME=test
export INFRA_RABBITMQ_PASSWORD=testtest

## ==== POSTGRESQL
export POSTGRES_USERNAME=test
export POSTGRES_PASSWORD=testtest
export POSTGRES_DATABASE=test

## ==== RESOURCES SETUP RABBITMQ
export SETUP_RABBITMQ_HOST=rabbitmq
export SETUP_RABBITMQ_PORT=15672
export SETUP_RABBITMQ_USERNAME=${INFRA_RABBITMQ_USERNAME}
export SETUP_RABBITMQ_PASSWORD=${INFRA_RABBITMQ_PASSWORD}

export SETUP_RABBITMQ_EXCHANGE_NAME=deye_web.direct
export SETUP_RABBITMQ_COMMENT_PRODUCT_QUEUE=catalog.reservation.queue

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Order Microservice"
export APPLICATION_TESTING=1

## ==== DATABASE
export DATABASE_HOST=localhost
export DATABASE_PORT=${DOCKER_DB_EXPOSE_PORT}
export DATABASE_DATABASE=${POSTGRES_DATABASE}
export DATABASE_USERNAME=${POSTGRES_USERNAME}
export DATABASE_PASSWORD=${POSTGRES_PASSWORD}

## ==== RABBITMQ
export RABBITMQ_USERNAME=${INFRA_RABBITMQ_USERNAME}
export RABBITMQ_PASSWORD=${INFRA_RABBITMQ_PASSWORD}
export RABBITMQ_HOST=localhost
export RABBITMQ_PORT=${DOCKER_RABBITMQ_EXPOSE_PORT_AMQP}
export RABBITMQ_COMMENT_PRODUCT_QUEUE=${SETUP_RABBITMQ_COMMENT_PRODUCT_QUEUE}

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts testing infrastructure.
test-infra-up() (
    cd "$_FUNCTIONS_LOCATION"

    build-migration-service
    docker compose -f docker-compose.test.yaml up -d --wait
    docker compose -f docker-compose.test.yaml wait resources-setup comment-migration-service &> /dev/null
    docker compose -f docker-compose.test.yaml rm -fv > /dev/null
)

# Builds a migration service for running migrations.
build-migration-service() (
    cd "$_FUNCTIONS_LOCATION"

    source .env.local && docker compose build comment-migration-service
)

# Stops testing infrastructure.
test-infra-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose -f docker-compose.test.yaml down -v
)
