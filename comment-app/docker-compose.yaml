name: comment

x-app-setup: &app-setup
  image: 'comment-app:latest'
  build:
    args:
      GROUP_ID: "${DOCKER_COMMENT_IMAGE_GROUP_ID}"
      USER_ID: "${DOCKER_COMMENT_IMAGE_USER_ID}"
    dockerfile: Dockerfile
    context: .
    additional_contexts:
      - src-comment-app=../app
  environment: &app-env
    APPLICATION_TITLE: ${APPLICATION_TITLE}
    APPLICATION_DEBUG: ${APPLICATION_DEBUG}
    APPLICATION_VERSION: ${APPLICATION_VERSION}

    DATABASE_USERNAME: ${DATABASE_USERNAME}
    DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    DATABASE_HOST: ${DATABASE_HOST}
    DATABASE_PORT: ${DATABASE_PORT}
    DATABASE_DATABASE: ${DATABASE_DATABASE}

    RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
    RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    RABBITMQ_HOST: ${RABBITMQ_HOST}
    RABBITMQ_PORT: ${RABBITMQ_PORT}
  volumes:
    - ../app/src:/app

services:

  backend-app:
    container_name: comment-microservice
    <<: *app-setup
    ports:
      - '${DOCKER_COMMENT_APPLICATION_EXPOSE_PORT}:${COMMENT_APPLICATION_PORT}'
    entrypoint: [
      "uvicorn", "interface.web.app:web_app",
      "--host", "0.0.0.0",
      "--port", "${COMMENT_APPLICATION_PORT}",
      "--factory",
      "--reload",
    ]
    depends_on:
      migration-service:
        condition: service_completed_successfully

  queue-consumer:
    container_name: comment-queue-consumer
    <<: *app-setup
    entrypoint: [
      "faststream", "run",
      "--factory",
      "interface.queue.app:queue_app",
    ]
    environment:
      <<: *app-env
      RABBITMQ_COMMENT_PRODUCT_QUEUE: "${RABBITMQ_COMMENT_PRODUCT_QUEUE}"
    depends_on:
      migration-service:
        condition: service_completed_successfully

  migration-service:
    <<: *app-setup
    working_dir: /app/infrastructure/database/relational/migrations
    command: [ "alembic", "upgrade", "head" ]

networks:
  default:
    name: deye-web-network
    external: true
