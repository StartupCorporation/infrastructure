## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_IDENTITY_AND_ACCESS_APPLICATION_EXPOSE_PORT=8100

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=identity_and_access
export DATABASE_USERNAME=identity_and_access_user
export DATABASE_PASSWORD=identity_and_access_password

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts the identity-and-access services and infrastructure part for correct work of identity-and-access microservice.
identity-and-access-up() (
    cd "$_FUNCTIONS_LOCATION"

    (cd ../../../infrastructure/ && source .env.local && infra-up)

    app-up
)

# Stops the identity-and-access microservice.
identity-and-access-down() (
    cd "$_FUNCTIONS_LOCATION"

    app-down

    (cd ../../../infrastructure/ && source .env.local && infra-down)
)

# Builds the identity-and-access docker image.
app-build() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose build
    docker image prune -f > /dev/null
)

# Starts only the identity-and-access application.
app-up() (
    cd "$_FUNCTIONS_LOCATION"

    app-build
    docker compose up -d
)

# Stops only the identity-and-access application.
app-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose down
)