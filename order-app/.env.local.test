## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_DB_EXPOSE_PORT=6543
export DOCKER_RABBITMQ_EXPOSE_PORT_AMQP=5672
export DOCKER_RABBITMQ_EXPOSE_PORT_UI=15672
export DOCKER_SMTP_SERVER_EXPOSE_PORT=8025

## ==== RABBITMQ
export INFRA_RABBITMQ_USERNAME=test
export INFRA_RABBITMQ_PASSWORD=testtest

## ==== POSTGRESQL
export POSTGRES_USERNAME=test
export POSTGRES_PASSWORD=testtest
export POSTGRES_DATABASE=test

## ==== RESOURCES SETUP RABBITMQ
export SETUP_RABBITMQ_HOST=rabbitmq
export SETUP_RABBITMQ_PORT=15672
export SETUP_RABBITMQ_USERNAME=${INFRA_RABBITMQ_USERNAME}
export SETUP_RABBITMQ_PASSWORD=${INFRA_RABBITMQ_PASSWORD}

export SETUP_RABBITMQ_EXCHANGE_NAME=deye_web.direct
export SETUP_RABBITMQ_CATALOG_RESERVATION_QUEUE=catalog.reservation.queue
export SETUP_RABBITMQ_ORDER_RESERVATION_QUEUE=order.queue

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Order Microservice"

## ==== DATABASE
export DATABASE_HOST=localhost
export DATABASE_PORT=${DOCKER_DB_EXPOSE_PORT}
export DATABASE_DATABASE=${POSTGRES_DATABASE}
export DATABASE_USERNAME=${POSTGRES_USERNAME}
export DATABASE_PASSWORD=${POSTGRES_PASSWORD}

## ==== RABBITMQ
export RABBITMQ_USERNAME=${INFRA_RABBITMQ_USERNAME}
export RABBITMQ_PASSWORD=${INFRA_RABBITMQ_PASSWORD}
export RABBITMQ_HOST=localhost
export RABBITMQ_PORT=${DOCKER_RABBITMQ_EXPOSE_PORT_AMQP}
export RABBITMQ_ORDER_QUEUE=${SETUP_RABBITMQ_ORDER_RESERVATION_QUEUE}
export RABBITMQ_CATALOG_RESERVATION_QUEUE="{\"NAME\": \"${SETUP_RABBITMQ_CATALOG_RESERVATION_QUEUE}\", \"EXCHANGE\": \"${SETUP_RABBITMQ_EXCHANGE_NAME}\"}"

## ==== JWT
export JWT_PUBLIC_KEY="
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAprbm7KfT9xcYGiOvYCyZ
UqnObuIIlQNJDJ7xUk0QaKPVaSLBKM5+eHtRfesj+xjtDv1cpm+GWqtvRV9QskYm
9Qnfhx2mSu0OdbdXsdYbF/IGuxPdN9J6pM4ZFeRb9Ta41AHvnazTJPvsGQK/uBRD
+QUKFq7ttrxUuo8540d6HThbww+mniu8u/RTFd2NFnKWGQvyo67JaO/CONTcwp1l
eT+3+qRMH0JXJYHfsK2A4VYZSTYdf2ZB3q6+LtToLsXkd//1Bm5nf/03/2XfaT/m
J7q4A0OIwqs0JspWBrPrP/wBCZ7mKRbjaBQFrczYksVE+Z/acAlTD3rlh09vQTww
BwIDAQAB
-----END PUBLIC KEY-----
"
export JWT_ALGORITHM=RS256

## ==== CATALOG SERVICE
export CATALOG_SERVICE_HOST=catalog-backend-app
export CATALOG_SERVICE_PORT=8090

## ==== IAC SERVICE
export IAC_HOST=iac-backend-app
export IAC_PORT=8100
export IAC_API_KEY=H35EFIKWNDVK22AQJPWO1DUJQ9U1FJ

## ==== SMTP
export SMTP_HOST=smtp-server
export SMTP_PORT=1025
export SMTP_TIMEOUT=5
export SMTP_USE_TLS=false
export SMTP_SENDER_EMAIL=deye.ukraine@gmail.com


## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts testing infrastructure.
test-infra-up() (
    cd "$_FUNCTIONS_LOCATION" && \

    build-migration-service
    docker compose -f docker-compose.test.yaml up -d --wait
    docker compose -f docker-compose.test.yaml wait resources-setup order-migration-service &> /dev/null
    docker compose -f docker-compose.test.yaml rm -fv > /dev/null
)

# Builds a migration service for running migrations.
build-migration-service() (
    cd "$_FUNCTIONS_LOCATION" && \

    source .env.local && docker compose build order-migration-service
)

# Stops testing infrastructure.
test-infra-down() (
    cd "$_FUNCTIONS_LOCATION" && \

    docker compose -f docker-compose.test.yaml down -v
)
