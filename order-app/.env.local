## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_ORDER_APPLICATION_EXPOSE_PORT=8020
export DOCKER_ORDER_IMAGE_GROUP_ID="$(test "$(id -u)" -lt 1000 && echo 1000 || echo "$(id -u)")"
export DOCKER_ORDER_IMAGE_USER_ID="$(test "$(id -g)" -lt 1000 && echo 1000 || echo "$(id -g)")"

## ==== ORDER APPLICATION
export ORDER_APPLICATION_PORT=8020

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Order Microservice"

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=order_
export DATABASE_USERNAME=order_user
export DATABASE_PASSWORD=order_password

## ==== RABBITMQ
export RABBITMQ_USERNAME=dev
export RABBITMQ_PASSWORD=devdev
export RABBITMQ_HOST=rabbitmq
export RABBITMQ_PORT=5672
export RABBITMQ_ORDER_QUEUE=order.queue
export RABBITMQ_CATALOG_RESERVATION_QUEUE='{"NAME": "catalog.reservation.queue", "EXCHANGE": "deye_web.direct"}'

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts the microservice and infrastructure part.
order-up() (
    cd "$_FUNCTIONS_LOCATION"

    (cd ../../../infrastructure/ && source .env.local && infra-up)

    app-up
)

# Stops the microservice.
order-down() (
    cd "$_FUNCTIONS_LOCATION"

    app-down

    (cd ../../../infrastructure/ && source .env.local && infra-down)
)

# Builds the microservice docker image.
app-build() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose build
    docker image prune -f > /dev/null
)

# Starts only the microservice.
app-up() (
    cd "$_FUNCTIONS_LOCATION"

    app-build
    docker compose up -d
    docker compose wait order-migration-service &> /dev/null
    docker compose rm -fv > /dev/null
)

# Stops only the microservice.
app-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose down
)

# Runs database migration files.
migration-run() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose run --rm order-migration-service migration-run
)

# Downgrades the latest database migration.
migration-rollback() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose run --rm order-migration-service migration-rollback
)
