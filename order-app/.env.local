## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER COMPOSE EXPOSE PORT
export DOCKER_ORDER_APPLICATION_EXPOSE_PORT=8020
export DOCKER_SMTP_SERVER_EXPOSE_PORT=8025

## ==== DOCKER BUILD
export DOCKER_ORDER_IMAGE_GROUP_ID="$(test "$(id -u)" -lt 1000 && echo 1000 || id -u)"
export DOCKER_ORDER_IMAGE_USER_ID="$(test "$(id -g)" -lt 1000 && echo 1000 || id -g)"
export DOCKER_INSTALL_LOCAL_SHARED_KERNEL=false

## ==== ORDER APPLICATION
export ORDER_APPLICATION_PORT=8020


## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Order Microservice"

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=order_
export DATABASE_USERNAME=order_user
export DATABASE_PASSWORD=order_password

## ==== RABBITMQ
export RABBITMQ_USERNAME=dev
export RABBITMQ_PASSWORD=devdev
export RABBITMQ_HOST=rabbitmq
export RABBITMQ_PORT=5672
export RABBITMQ_ORDER_QUEUE=order.queue
export RABBITMQ_CATALOG_RESERVATION_QUEUE='{"NAME": "catalog.reservation", "EXCHANGE": "deye_web.direct"}'

## ==== JWT
export JWT_PUBLIC_KEY="
-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAprbm7KfT9xcYGiOvYCyZ
UqnObuIIlQNJDJ7xUk0QaKPVaSLBKM5+eHtRfesj+xjtDv1cpm+GWqtvRV9QskYm
9Qnfhx2mSu0OdbdXsdYbF/IGuxPdN9J6pM4ZFeRb9Ta41AHvnazTJPvsGQK/uBRD
+QUKFq7ttrxUuo8540d6HThbww+mniu8u/RTFd2NFnKWGQvyo67JaO/CONTcwp1l
eT+3+qRMH0JXJYHfsK2A4VYZSTYdf2ZB3q6+LtToLsXkd//1Bm5nf/03/2XfaT/m
J7q4A0OIwqs0JspWBrPrP/wBCZ7mKRbjaBQFrczYksVE+Z/acAlTD3rlh09vQTww
BwIDAQAB
-----END PUBLIC KEY-----
"
export JWT_ALGORITHM=RS256

## ==== CATALOG SERVICE
export CATALOG_SERVICE_HOST=catalog-backend-app
export CATALOG_SERVICE_PORT=8080

## ==== IAC SERVICE
export IAC_HOST=iac-backend-app
export IAC_PORT=8080
export IAC_API_KEY=H35EFIKWNDVK22AQJPWO1DUJQ9U1FJ

## ==== SMTP
export SMTP_HOST=smtp-server
export SMTP_PORT=1025
export SMTP_TIMEOUT=5
export SMTP_USE_TLS=false
export SMTP_SENDER_EMAIL=deye.ukraine@gmail.com


## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts the microservice and infrastructure part.
order-up() (
    cd "$_FUNCTIONS_LOCATION" && \

    (cd ../../../infrastructure/ && source .env.local && infra-up) && \

    app-up
)

# Stops the microservice.
order-down() (
    cd "$_FUNCTIONS_LOCATION" && \

    app-down

    (cd ../../../infrastructure/ && source .env.local && infra-down)
)

# Builds the microservice docker image.
app-build() (
    cd "$_FUNCTIONS_LOCATION" && \

    docker compose build
    docker image prune -f > /dev/null
)

# Starts only the microservice.
app-up() (
    cd "$_FUNCTIONS_LOCATION" && \

    app-build
    docker compose up -d
    docker compose wait order-migration-service &> /dev/null
    docker compose rm -fv > /dev/null
)

# Stops only the microservice.
app-down() (
    cd "$_FUNCTIONS_LOCATION" && \

    docker compose down
)

# Runs database migration files.
migration-run() (
    cd "$_FUNCTIONS_LOCATION" && \

    docker compose run --rm order-migration-service migration-run
)

# Downgrades the latest database migration.
migration-rollback() (
    cd "$_FUNCTIONS_LOCATION" && \

    docker compose run --rm order-migration-service migration-rollback
)
