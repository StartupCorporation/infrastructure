## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_CUSTOMER_APPLICATION_EXPOSE_PORT=8000
export DOCKER_CUSTOMER_IMAGE_GROUP_ID="$(test "$(id -u)" -lt 1000 && echo 1000 || echo "$(id -u)")"
export DOCKER_CUSTOMER_IMAGE_USER_ID="$(test "$(id -g)" -lt 1000 && echo 1000 || echo "$(id -g)")"
export DOCKER_ASYNCAPI_EXPOSE_PORT=8080

## ==== CUSTOMER APPLICATION
export CUSTOMER_APPLICATION_PORT=8000

## ==== ASYNCAPI
export ASYNCAPI_DOCS_PORT=7000

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Deye Web"

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=customer
export DATABASE_USERNAME=customer_user
export DATABASE_PASSWORD=customer_password

## ==== RABBITMQ
export RABBITMQ_USERNAME=dev
export RABBITMQ_PASSWORD=devdev
export RABBITMQ_HOST=rabbitmq
export RABBITMQ_PORT=5672

## ==== RABBITMQ QUEUES
export RABBITMQ_QUEUE_CATEGORY__NAME=customer.category.queue
export RABBITMQ_QUEUE_CATEGORY__DURABLE=1

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts the customer services and infrastructure part for correct work of customer microservice.
customer-up() (
    cd "$_FUNCTIONS_LOCATION"

    (cd ../../../infrastructure/ && source .env.local && infra-up)

    app-up
)

# Stops the customer microservice.
customer-down() (
    cd "$_FUNCTIONS_LOCATION"

    app-down

    (cd ../../../infrastructure/ && source .env.local && infra-down)
)

# Builds the customer docker image.
app-build() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose build
    docker image prune -f > /dev/null
)

# Starts only the customer application.
app-up() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose up -d
    docker compose wait migration-service &> /dev/null
    docker compose rm -fv > /dev/null
)

# Stops only the customer application.
app-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose down
)
