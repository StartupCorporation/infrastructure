## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_APPLICATION_EXPOSE_PORT=8000
export DOCKER_ASYNCAPI_EXPOSE_PORT=8080

## ==== APPLICATION
export WEB_APPLICATION_PORT=8000
export GROUP_ID="$(id -g)"
export USER_ID="$(id -u)"

## ==== ASYNCAPI
export ASYNCAPI_DOCS_PORT=7000

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== APPLICATION
export APPLICATION_DEBUG=1
export APPLICATION_VERSION=0.0.1
export APPLICATION_TITLE="Deye Web"

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=customer
export DATABASE_USERNAME=customer_user
export DATABASE_PASSWORD=customer_password

## ==== RABBITMQ
export RABBITMQ_USERNAME=dev
export RABBITMQ_PASSWORD=devdev
export RABBITMQ_HOST=rabbitmq
export RABBITMQ_PORT=5672

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

customer-up() (
    cd "$_FUNCTIONS_LOCATION"

    $(cd ../../../infrastructure/ && source .env.local && infra-up)

    app-up
)

customer-down() (
    cd "$_FUNCTIONS_LOCATION"

    $(cd ../../../infrastructure/ && source .env.local && infra-down)

    app-down
)

app-build() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose build
    docker image prune -f > /dev/null
)

app-up() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose up -d
)

app-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose down
)
