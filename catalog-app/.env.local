## ======================================
## ==== INFRASTRUCTURE CONFIGURATION ====
## ======================================

## ==== DOCKER
export DOCKER_CATALOG_APPLICATION_EXPOSE_PORT=8090
export DOCKER_MINIO_EXPOSE_PORT_UI=10000
export DOCKER_MINIO_EXPOSE_PORT_CONSOLE=9001

## ===================================
## ==== APPLICATION CONFIGURATION ====
## ===================================

## ==== DATABASE
export DATABASE_HOST=database
export DATABASE_PORT=5432
export DATABASE_DATABASE=catalog
export DATABASE_USERNAME=catalog_user
export DATABASE_PASSWORD=catalog_password

## ==== MINIO
export MINIO_ACCESS_KEY=Q3AM3UQ867SPQQA43P2F
export MINIO_SECRET_KEY=tfteSlswRu7BJ86wekitnifILbZam1KYY3TG
export MINIO_URL=http://minio:9000
export MINIO_BUCKET_NAME=deye-admin-files

## ==== RABBITMQ
export RABBITMQ_USERNAME=dev
export RABBITMQ_PASSWORD=devdev
export RABBITMQ_HOST=rabbitmq
export RABBITMQ_PORT=5672
export RABBITMQ_COMMENT_PRODUCT_QUEUE=comment.product
export RABBITMQ_EXCHANGE_NAME=deye_web.direct
export RABBITMQ_CATALOG_RESERVATION_QUEUE=catalog.reservation
export RABBITMQ_DEAD_LETTER_CATALOG_RESERVATION_QUEUE=catalog.reservation.dlq
export RABBITMQ_ORDER_QUEUE=order.queue
export FE_URL=http://localhost:4200

## ==== JWT
export JWT_PUBLIC_KEY="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAprbm7KfT9xcYGiOvYCyZUqnObuIIlQNJDJ7xUk0QaKPVaSLBKM5+eHtRfesj+xjtDv1cpm+GWqtvRV9QskYm9Qnfhx2mSu0OdbdXsdYbF/IGuxPdN9J6pM4ZFeRb9Ta41AHvnazTJPvsGQK/uBRD+QUKFq7ttrxUuo8540d6HThbww+mniu8u/RTFd2NFnKWGQvyo67JaO/CONTcwp1leT+3+qRMH0JXJYHfsK2A4VYZSTYdf2ZB3q6+LtToLsXkd//1Bm5nf/03/2XfaT/mJ7q4A0OIwqs0JspWBrPrP/wBCZ7mKRbjaBQFrczYksVE+Z/acAlTD3rlh09vQTwwBwIDAQAB"

## ===================================
## =======      FUNCTIONS      =======
## ===================================
export _FUNCTIONS_LOCATION=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


# Starts the catalog services and infrastructure part for correct work of catalog microservice.
catalog-up() (
    cd "$_FUNCTIONS_LOCATION"

    (cd ../../../infrastructure/ && source .env.local && infra-up)

    app-up
)

# Stops the catalog microservice.
catalog-down() (
    cd "$_FUNCTIONS_LOCATION"

    app-down

    (cd ../../../infrastructure/ && source .env.local && infra-down)
)

# Builds the catalog docker image.
app-build() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose build
    docker image prune -f > /dev/null
)

# Starts only the catalog application.
app-up() (
    cd "$_FUNCTIONS_LOCATION"

    app-build
    docker compose up -d
)

# Stops only the catalog application.
app-down() (
    cd "$_FUNCTIONS_LOCATION"

    docker compose down
)
